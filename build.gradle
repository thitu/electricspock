/*
 * Copyright 2016 Herman Cheung
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

buildscript {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "com.android.tools.build:gradle:3.6.0"
    classpath "org.codehaus.groovy:groovy-android-gradle-plugin:2.0.1"
    classpath "com.netflix.nebula:gradle-extra-configurations-plugin:5.0.3"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
    jcenter()
  }

  gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
      options.compilerArgs << "-Xlint:all,-processing"
    }
  }

  tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped", "standardOut", "standardError"]
    testLogging.showStandardStreams = true
  }
}